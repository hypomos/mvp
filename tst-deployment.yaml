apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-hypomos-tst-grain-storage
    name: grain-storage
    namespace: hypomos-tst
  spec:
    replicas: 1
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-hypomos-tst-grain-storage
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-hypomos-tst-grain-storage
      spec:
        containers:
        - args:
          - server
          - /data
          env:
          - name: MINIO_ACCESS_KEY
            value: minio
          - name: MINIO_SECRET_KEY
            value: minio123
          image: minio/minio
          imagePullPolicy: Always
          name: grain-storage
          ports:
          - containerPort: 9000
            name: minio
            protocol: TCP
        restartPolicy: Always
        schedulerName: default-scheduler
- apiVersion: v1
  kind: Service
  metadata:
    name: grain-storage
    namespace: hypomos-tst
  spec:
    ports:
    - name: minio
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      workload.user.cattle.io/workloadselector: deployment-hypomos-tst-grain-storage
      sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Namespace
  metadata:
    name: hypomos-tst
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-silo
    name: hypomos-silo
    namespace: hypomos-tst
  spec:
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-default-hypomos-silo
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-default-hypomos-silo
      spec:
        imagePullSecrets:
        - name: harbor-hypomos
        containers:
        - image: ${CICD_REGISTRY}/hypomos-silo:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: hypomos-silo
          ports:
          - containerPort: 30000
            name: orleans
            protocol: TCP
          env:
          - name: HYPOMOS_OrleansMinioStorage__Endpoint
            value: "grain-storage:9000"
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: hypomos-silo
    namespace: hypomos-tst
  spec:
    ports:
    - name: orleans
      port: 30000
      protocol: TCP
      targetPort: 30000
    selector:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-silo
      sessionAffinity: None
    type: ClusterIP

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-identity
    name: hypomos-identity
    namespace: hypomos-tst
  spec:
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-default-hypomos-identity
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-default-hypomos-identity
      spec:
        imagePullSecrets:
        - name: harbor-hypomos
        containers:
        - image: ${CICD_REGISTRY}/hypomos-identity:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: hypomos-identity
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          env:
          - name: HYPOMOS_ConnectionStrings__DefaultConnection
            value: Server=hypomos-db;Database=hypomos;User Id=sa;Password=yourStrong(!)Password;
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: hypomos-identity
    namespace: hypomos-tst
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-identity
      sessionAffinity: None
    type: ClusterIP

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-api
    name: hypomos-api
    namespace: hypomos-tst
  spec:
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-default-hypomos-api
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-default-hypomos-api
      spec:
        imagePullSecrets:
        - name: harbor-hypomos
        containers:
        - image: ${CICD_REGISTRY}/hypomos-api:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: hypomos-api
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: hypomos-api
    namespace: hypomos-tst
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-api
      sessionAffinity: None
    type: ClusterIP

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-blazorapp
    name: hypomos-blazorapp
    namespace: hypomos-tst
  spec:
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-default-hypomos-blazorapp
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-default-hypomos-blazorapp
      spec:
        imagePullSecrets:
        - name: harbor-hypomos
        containers:
        - image: ${CICD_REGISTRY}/hypomos-blazorapp:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: hypomos-blazorapp
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: hypomos-blazorapp
    namespace: hypomos-tst
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-blazorapp
      sessionAffinity: None
    type: LoadBalancer

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-app
    name: hypomos-app
    namespace: hypomos-tst
  spec:
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-default-hypomos-app
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-default-hypomos-app
      spec:
        imagePullSecrets:
        - name: harbor-hypomos
        containers:
        - image: ${CICD_REGISTRY}/hypomos-app:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: hypomos-app
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: hypomos-app
    namespace: hypomos-tst
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      workload.user.cattle.io/workloadselector: deployment-default-hypomos-app
      sessionAffinity: None
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: hypomos-tst
    namespace: hypomos-tst
  spec:
    rules:
    - host: hypomos-tst.cloud.bwalti.net
      http:
        paths:
        - path: /api
          pathType: ImplementationSpecific
          backend:
            serviceName: hypomos-api
            servicePort: 80
        - path: /
          pathType: ImplementationSpecific
          backend:
            serviceName: hypomos-app
            servicePort: 80
    tls:
    - hosts:
      - hypomos-tst.cloud.bwalti.net
      secretName: hypomos-tst-le
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: hypomos-tst-id
    namespace: hypomos-tst
  spec:
    rules:
    - host: hypomos-tst-id.cloud.bwalti.net
      http:
        paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            serviceName: hypomos-identity
            servicePort: 80
    tls:
    - hosts:
      - hypomos-tst-id.cloud.bwalti.net
      secretName: hypomos-tst-le
